{"version":3,"sources":["ColorModeSwitcher.js","spaceShip.svg","Endpoint.js","Rotation.js","Chart.js","Graph.js","raspi.webp","sensehat_axis.png","SendText.js","Home.js","Rotation3d.js","GenericGraph.js","AccelGraph.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","ENDPOINT","window","location","hostname","Rotation","useState","roll","pitch","yaw","response","setResponse","useEffect","console","log","socket","socketIOClient","on","data","orientation","disconnect","my","textAlign","letterSpacing","justifyContent","Object","keys","map","item","i","mx","toFixed","style","transform","height","src","spaceShip","Chart","plotKey","unit","toUpperCase","length","slice","LineChart","width","YAxis","type","domain","Label","value","position","angle","XAxis","dataKey","Tooltip","CartesianGrid","stroke","Line","strokeWidth","yAxisId","setLog","show","setShow","toggleData","event","target","name","k","SendText","speed","setData","handleSubmit","e","preventDefault","axios","get","params","handleChange","interval","setInterval","clearInterval","hex","result","exec","r","parseInt","g","b","hexToRgb","fontWeight","p","bg","boxShadow","borderRadius","onSubmit","onChange","colorScheme","border","Home","m","raspi","objectFit","axis","Cube","mesh","useRef","hovered","setHover","active","setActive","ref","scale","onPointerOver","onPointerOut","rotation","Math","PI","args","App","intensity","penumbra","GenericGraph","intID","then","res","AccelGraph","x","y","z","theme","flexDir","minH","minW","alignItems","px","py","to","exact","path","component","Graph","Rotation3d","render","init","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6978317b.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/spaceShip.ba63d907.svg\";","//const ENDPOINT = `http://192.168.1.249:5000`;\n\n//const ENDPOINT = `http://10.3.141.1:5000`;\n\nconst ENDPOINT = `http://${window.location.hostname}:5000`;\n\nexport default ENDPOINT;\n","import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { Flex, Text, Box, Heading, Image } from '@chakra-ui/react';\nimport spaceShip from './spaceShip.svg';\nimport ENDPOINT from './Endpoint';\n\nconst Rotation = () => {\n\tconst [ response, setResponse ] = useState({ roll: 0, pitch: 0, yaw: 0 });\n\n\tuseEffect(() => {\n\t\tconsole.log('connect to ', ENDPOINT);\n\t\tconst socket = socketIOClient(ENDPOINT);\n\t\tsocket.on('imu', (data) => {\n\t\t\tsetResponse(data.data.orientation);\n\t\t});\n\n\t\treturn () => socket.disconnect();\n\t}, []);\n\n\treturn (\n\t\t<Box>\n\t\t\t<Heading my=\"5\" textAlign=\"center\" letterSpacing=\".1em\">\n\t\t\t\tIMU Demo\n\t\t\t</Heading>\n\t\t\t<Flex my=\"5\" justifyContent=\"center\">\n\t\t\t\t<Flex justifyContent=\"space-between\">\n\t\t\t\t\t{Object.keys(response).map((item, i) => (\n\t\t\t\t\t\t<Text mx=\"2\" key={i}>\n\t\t\t\t\t\t\t{item}: {response[item].toFixed(1)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t))}\n\t\t\t\t</Flex>\n\t\t\t</Flex>\n\t\t\t<Flex\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: `rotate(${response.pitch.toFixed(2)}deg)`\n\t\t\t\t}}\n\t\t\t\tjustifyContent=\"center\"\n\t\t\t\theight=\"50vh\"\n\t\t\t>\n\t\t\t\t<Image src={spaceShip} />\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n\nexport default Rotation;\n","import React from 'react';\nimport {\n\tResponsiveContainer,\n\tLineChart,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tReferenceLine,\n\tReferenceArea,\n\tReferenceDot,\n\tTooltip,\n\tCartesianGrid,\n\tLegend,\n\tBrush,\n\tErrorBar,\n\tAreaChart,\n\tArea,\n\tLabel,\n\tLabelList\n} from 'recharts';\n\nimport { Flex, Text, Box, Heading, Image } from '@chakra-ui/react';\n\nexport default function Chart(props) {\n\tconst { data, plotKey, unit } = props;\n\treturn (\n\t\t<Box>\n\t\t\t<Flex justifyContent=\"center\">\n\t\t\t\t<Heading color=\"blue.700\" mx=\"2\" size=\"md\">\n\t\t\t\t\t{plotKey.toUpperCase()}:\n\t\t\t\t</Heading>\n\t\t\t\t<Heading mx=\"3\" size=\"md\" color=\"gray\">\n\t\t\t\t\t{data.length > 10 && data.slice(-1)[0][plotKey].toFixed(1)}\n\t\t\t\t</Heading>\n\t\t\t</Flex>\n\t\t\t<Flex justifyContent=\"center\">\n\t\t\t\t<LineChart width={700} height={400} data={props.data}>\n\t\t\t\t\t<YAxis type=\"number\" unit=\"\" width={80} domain={[ 'auto', 'auto' ]}>\n\t\t\t\t\t\t<Label value={unit} position=\"insideLeft\" angle={90} />\n\t\t\t\t\t</YAxis>\n\t\t\t\t\t<XAxis dataKey=\"name\">\n\t\t\t\t\t\t<Label value=\"Time\" angle={0} />\n\t\t\t\t\t</XAxis>\n\t\t\t\t\t<Tooltip />\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\n\t\t\t\t\t<Line type=\"monotone\" dataKey={props.plotKey} stroke=\"#ffb14a\" strokeWidth={3} yAxisId={0} />\n\t\t\t\t</LineChart>\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { Flex, Text, Box, Heading, Image, Button } from '@chakra-ui/react';\n\nimport Chart from './Chart';\n\nimport ENDPOINT from './Endpoint';\n\nconst Rotation = () => {\n\tconst [ response, setResponse ] = useState({ roll: 0, pitch: 0, yaw: 0 });\n\tconst [ log, setLog ] = useState([]);\n\tconst [ show, setShow ] = useState('roll');\n\n\tuseEffect(() => {\n\t\tconst socket = socketIOClient(ENDPOINT);\n\t\tsocket.on('imu', (data) => {\n\t\t\tsetResponse(data.data.orientation);\n\t\t});\n\n\t\treturn () => socket.disconnect();\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetLog([ ...log.slice(-50), response ]);\n\t\t},\n\t\t[ response ]\n\t);\n\n\tconst toggleData = (event) => {\n\t\tsetShow(event.target.name);\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<Heading my=\"5\" textAlign=\"center\" letterSpacing=\".1em\">\n\t\t\t\tIMU Charts\n\t\t\t</Heading>\n\t\t\t<Chart unit=\"Degrees\" data={log} plotKey={show} />\n\t\t\t<Flex my=\"7\" justifyContent=\"center\">\n\t\t\t\t{Object.keys(response).map((k, i) => (\n\t\t\t\t\t<Button mx=\"2\" key={i} onClick={toggleData} name={k}>\n\t\t\t\t\t\t{k.toUpperCase()}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n\nexport default Rotation;\n","export default __webpack_public_path__ + \"static/media/raspi.c0f7c7bb.webp\";","export default __webpack_public_path__ + \"static/media/sensehat_axis.53ddbe1c.png\";","import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { Flex, Text, Box, Heading, Image, Button, Input, Form } from '@chakra-ui/react';\nimport Chart from './Chart';\nimport axios from 'axios';\nimport ENDPOINT from './Endpoint';\n\nconst SendText = () => {\n\tconst [ data, setData ] = useState({ text: 'EW370', color: '#1bd5fa', speed: 0.08 });\n\n\tconst handleSubmit = (e) => {\n\t\tif (e) e.preventDefault();\n\t\taxios.get(ENDPOINT + '/message', { params: data });\n\t};\n\n\tconst handleChange = (e) => {\n\t\tsetData({ ...data, [e.target.name]: e.target.value });\n\t};\n\n\tfunction hexToRgb(hex) {\n\t\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\t\treturn result\n\t\t\t? {\n\t\t\t\t\tr: parseInt(result[1], 16),\n\t\t\t\t\tg: parseInt(result[2], 16),\n\t\t\t\t\tb: parseInt(result[3], 16)\n\t\t\t\t}\n\t\t\t: null;\n\t}\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\thandleSubmit(false);\n\t\t\t}, 5 * 1000);\n\t\t\treturn () => clearInterval(interval);\n\t\t},\n\t\t[ data ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log(data.color);\n\t\t\tsetData({ ...data, ...hexToRgb(data.color) });\n\t\t},\n\t\t[ data.color ]\n\t);\n\n\treturn (\n\t\t<Box my=\"2\">\n\t\t\t<Heading size=\"md\" fontWeight=\"300\" textAlign=\"center\">\n\t\t\t\tSend Text to Sense Hat\n\t\t\t</Heading>\n\t\t\t<Flex my=\"1\" justifyContent=\"center\">\n\t\t\t\t<Flex p=\"5\" bg=\"gray.50\" boxShadow=\"lg\" borderRadius=\"md\">\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t<Input name=\"text\" value={data.text} onChange={handleChange} />\n\t\t\t\t\t\t\t<Button type=\"submit\" colorScheme=\"blue\">\n\t\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tborder=\"none\"\n\t\t\t\t\t\t\t\t\tborderRadius=\"lg\"\n\t\t\t\t\t\t\t\t\twidth=\"100px\"\n\t\t\t\t\t\t\t\t\theight=\"40px\"\n\t\t\t\t\t\t\t\t\tname=\"color\"\n\t\t\t\t\t\t\t\t\ttype=\"color\"\n\t\t\t\t\t\t\t\t\tvalue={data.color}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</form>\n\t\t\t\t</Flex>\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n\nexport default SendText;\n","import React from 'react';\nimport {\n\tChakraProvider,\n\tFlex,\n\tBox,\n\tText,\n\tHeading,\n\tLink,\n\tVStack,\n\tCode,\n\tGrid,\n\ttheme,\n\tImage,\n\tUnorderedList,\n\tListItem\n} from '@chakra-ui/react';\nimport raspi from './raspi.webp';\nimport axis from './sensehat_axis.png';\nimport ReactMarkdown from 'react-markdown';\nimport SendText from './SendText';\n\nexport default function Home() {\n\treturn (\n\t\t<Box>\n\t\t\t<Box m=\"10\">\n\t\t\t\t<Heading my=\"3\" size=\"md\">\n\t\t\t\t\tWhat is an IMU?\n\t\t\t\t</Heading>\n\t\t\t\t<Text my=\"1\">IMU stands for Inertial Measurement Unit. It's actually three sensors in one:</Text>\n\t\t\t\t<UnorderedList>\n\t\t\t\t\t<ListItem>A gyroscope (measures momentum and rotation)</ListItem>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\tAn accelerometer (measures acceleration forces and can be used to find the direction of gravity)\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\tA magnetometer (measures the Earth's own magnetic field, so it's a bit like a compass)\n\t\t\t\t\t</ListItem>\n\t\t\t\t</UnorderedList>\n\t\t\t</Box>\n\t\t\t<Flex height=\"50vh\" justifyContent=\"center\">\n\t\t\t\t<Image src={raspi} objectFit=\"scale-down\" />\n\t\t\t</Flex>\n\t\t\t<Box m=\"10\">\n\t\t\t\t<Heading my=\"3\" size=\"md\">\n\t\t\t\t\tHow is orientation represented?\n\t\t\t\t</Heading>\n\t\t\t\t<Text my=\"1\">The three axes are:</Text>\n\t\t\t\t<UnorderedList>\n\t\t\t\t\t<ListItem>Pitch (like a plane taking off)</ListItem>\n\t\t\t\t\t<ListItem>Roll (the plane doing an aileron roll)</ListItem>\n\t\t\t\t\t<ListItem>Yaw (imagine steering the plane like a car)</ListItem>\n\t\t\t\t</UnorderedList>\n\t\t\t</Box>\n\t\t\t<Flex height=\"50vh\" justifyContent=\"center\">\n\t\t\t\t<Image objectFit=\"scale-down\" src={axis} />\n\t\t\t</Flex>\n\t\t\t<Box m=\"10\">\n\t\t\t\t<Heading my=\"3\" size=\"md\">\n\t\t\t\t\tHow is acceleration represented?\n\t\t\t\t</Heading>\n\t\t\t\t<Text my=\"1\">\n\t\t\t\t\tThe three axes, (x,y,z) are shown above. The Sense Hat provides acceration scaled to Earth's\n\t\t\t\t\tGravity. 1.0 Gs = 9.8 m/s^2\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t\t<SendText />\n\t\t</Box>\n\t);\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport socketIOClient from 'socket.io-client';\nimport { Heading, Flex, Text, Box } from '@chakra-ui/react';\nimport ENDPOINT from './Endpoint';\n\nfunction Cube(props) {\n\t// This reference will give us direct access to the mesh\n\tconst mesh = useRef();\n\t// Set up state for the hovered and active state\n\tconst [ hovered, setHover ] = useState(false);\n\tconst [ active, setActive ] = useState(false);\n\n\tconst [ response, setResponse ] = useState({ roll: 0, pitch: 0, yaw: 0 });\n\n\tuseEffect(() => {\n\t\tconsole.log('connect to ', ENDPOINT);\n\t\tconst socket = socketIOClient(ENDPOINT);\n\t\tsocket.on('imu', (data) => {\n\t\t\tsetResponse(data.data.orientation);\n\t\t});\n\n\t\treturn () => socket.disconnect();\n\t}, []);\n\n\t// Rotate mesh every frame, this is outside of React without overhead\n\t// useFrame(() => {\n\t// \tmesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n\t// });\n\treturn (\n\t\t<mesh\n\t\t\t{...props}\n\t\t\tref={mesh}\n\t\t\tscale={active ? 1.5 : 2}\n\t\t\tonClick={(e) => setActive(!active)}\n\t\t\tonPointerOver={(e) => setHover(true)}\n\t\t\tonPointerOut={(e) => setHover(false)}\n\t\t\trotation={[ -response.roll / 180 * Math.PI, -response.yaw / 180 * Math.PI, 0 ]}\n\t\t>\n\t\t\t<boxGeometry args={[ 1, 1, 1 ]} />\n\t\t\t<meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n\t\t</mesh>\n\t);\n}\n\nexport default function App() {\n\treturn (\n\t\t<Box>\n\t\t\t<Flex justifyContent=\"center\">\n\t\t\t\t<Heading my=\"5\" textAlign=\"center\" letterSpacing=\".1em\">\n\t\t\t\t\tIMU Demo\n\t\t\t\t</Heading>\n\t\t\t</Flex>\n\n\t\t\t<Canvas style={{ width: '100vw', height: '95vh' }}>\n\t\t\t\t<ambientLight intensity={0.5} />\n\t\t\t\t<spotLight position={[ 10, 10, 10 ]} angle={0.15} penumbra={1} />\n\t\t\t\t<pointLight position={[ -10, -10, -10 ]} />\n\t\t\t\t<Cube position={[ 0, 1, 0 ]} />\n\t\t\t</Canvas>\n\t\t</Box>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { Flex, Text, Box, Heading, Image, Button } from '@chakra-ui/react';\nimport Chart from './Chart';\nimport axios from 'axios';\nimport ENDPOINT from './Endpoint';\n\nconst GenericGraph = (props) => {\n\tconst { data } = props;\n\n\tconst [ response, setResponse ] = useState(0);\n\tconst [ log, setLog ] = useState([]);\n\tconst [ show, setShow ] = useState(data[0]);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst intID = setInterval(() => {\n\t\t\t\taxios.get(ENDPOINT + '/' + show.name).then((res) => {\n\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\tsetResponse({ [show.name]: res.data });\n\t\t\t\t});\n\t\t\t}, 100);\n\n\t\t\treturn () => clearInterval(intID);\n\t\t},\n\t\t[ show ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (response === 0) return;\n\t\t\tsetLog([ ...log.slice(-200), response ]);\n\t\t},\n\t\t[ response ]\n\t);\n\n\tconst toggleData = (i) => {\n\t\tsetShow(data[i]);\n\t\tsetLog([]);\n\t\tsetResponse(0);\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<Heading my=\"5\" textAlign=\"center\" letterSpacing=\".1em\">\n\t\t\t\tSense Hat Charts\n\t\t\t</Heading>\n\t\t\t<Chart unit={show.unit} data={log} plotKey={show.name} />\n\t\t\t<Flex my=\"7\" justifyContent=\"center\">\n\t\t\t\t{data.map((item, i) => (\n\t\t\t\t\t<Button mx=\"2\" key={i} onClick={() => toggleData(i)} name={item.name}>\n\t\t\t\t\t\t{item.name.toUpperCase()}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n\nexport default GenericGraph;\n","import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { Flex, Text, Box, Heading, Image, Button } from '@chakra-ui/react';\nimport Chart from './Chart';\nimport ENDPOINT from './Endpoint';\nimport axios from 'axios';\n\nconst AccelGraph = () => {\n\tconst [ response, setResponse ] = useState({ x: 0, y: 0, z: 0 });\n\tconst [ log, setLog ] = useState([]);\n\tconst [ show, setShow ] = useState('x');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst intID = setInterval(() => {\n\t\t\t\taxios.get(ENDPOINT + '/accelerometer').then((res) => {\n\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\tsetResponse(res.data);\n\t\t\t\t});\n\t\t\t}, 100);\n\n\t\t\treturn () => clearInterval(intID);\n\t\t},\n\t\t[ show ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetLog([ ...log.slice(-50), response ]);\n\t\t},\n\t\t[ response ]\n\t);\n\n\tconst toggleData = (event) => {\n\t\tsetShow(event.target.name);\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<Heading my=\"5\" textAlign=\"center\" letterSpacing=\".1em\">\n\t\t\t\tAccelerometer Charts\n\t\t\t</Heading>\n\t\t\t<Chart unit=\"G\" data={log} plotKey={show} />\n\t\t\t<Flex my=\"7\" justifyContent=\"center\">\n\t\t\t\t{Object.keys(response).map((k, i) => (\n\t\t\t\t\t<Button mx=\"2\" key={i} onClick={toggleData} name={k}>\n\t\t\t\t\t\t{k.toUpperCase()}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n\nexport default AccelGraph;\n","import React from 'react';\nimport { ChakraProvider, Flex, Box, Text, Heading, Link, VStack, Code, Grid, theme, Image } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport Rotation from './Rotation';\nimport Graph from './Graph';\nimport Home from './Home';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport Rotation3d from './Rotation3d';\nimport GenericGraph from './GenericGraph';\nimport AccelGraph from './AccelGraph';\nimport SendText from './SendText';\n\nfunction App() {\n\treturn (\n\t\t<ChakraProvider theme={theme}>\n\t\t\t<Flex flexDir=\"column\" justifyContent=\"space-between\" minH=\"100vh\" minW=\"100vw\">\n\t\t\t\t<Box>\n\t\t\t\t\t<Flex boxShadow=\"lg\" bg=\"teal\" alignItems=\"center\" justifyContent=\"space-between\" px=\"5\" py=\"2\">\n\t\t\t\t\t\t<Box p=\"2\">\n\t\t\t\t\t\t\t<NavLink to=\"/\">\n\t\t\t\t\t\t\t\t<Heading color=\"white\" size=\"lg\" fontWeight=\"200\" letterSpacing=\".1em\">\n\t\t\t\t\t\t\t\t\tSense Hat Demo\n\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<NavLink to=\"/\">\n\t\t\t\t\t\t\t<Text color=\"white\">Home</Text>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/spaceship\">\n\t\t\t\t\t\t\t<Text color=\"white\">Space Ship</Text>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/3d\">\n\t\t\t\t\t\t\t<Text color=\"white\">3D</Text>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/imu_graph\">\n\t\t\t\t\t\t\t<Text color=\"white\">IMU Graph</Text>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/tph_graph\">\n\t\t\t\t\t\t\t<Text color=\"white\">TPH Graph</Text>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/accel_graph\">\n\t\t\t\t\t\t\t<Text color=\"white\">Accel Graph</Text>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/send_text\">\n\t\t\t\t\t\t\t<Text color=\"white\">Send Text</Text>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<ColorModeSwitcher />\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t\t<Route exact path=\"/spaceship\" component={Rotation} />\n\t\t\t\t\t\t<Route exact path=\"/imu_graph\" component={Graph} />\n\t\t\t\t\t\t<Route exact path=\"/accel_graph\" component={AccelGraph} />\n\t\t\t\t\t\t<Route exact path=\"/3d\" component={Rotation3d} />\n\t\t\t\t\t\t<Route exact path=\"/send_text\" component={SendText} />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/tph_graph\"\n\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t<GenericGraph\n\t\t\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t\t\t{ name: 'temperature', value: 75, unit: 'Degrees Farenheit' },\n\t\t\t\t\t\t\t\t\t\t{ name: 'pressure', value: 1022, unit: 'mbar' },\n\t\t\t\t\t\t\t\t\t\t{ name: 'humidity', value: 30, unit: 'Percent (%)' }\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/temperature_graph\"\n\t\t\t\t\t\t\trender={() => <GenericGraph name=\"temperature\" init={73} />}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Route exact path=\"/humidity_graph\" render={() => <GenericGraph name=\"humidity\" init={73} />} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Box>\n\t\t\t\t<Flex boxShadow=\"lg\" bg=\"teal\" alignItems=\"center\" justifyContent=\"center\" p=\"2\" boxShadow=\"lg\">\n\t\t\t\t\t<Text fontWeight=\"300\" color=\"white\" textAlign=\"center\">\n\t\t\t\t\t\tCreated By Allan Elsberry\n\t\t\t\t\t</Text>\n\t\t\t\t</Flex>\n\t\t\t</Flex>\n\t\t</ChakraProvider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<ColorModeScript />\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}